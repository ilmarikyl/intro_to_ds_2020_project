{"version":3,"sources":["components/Navigation.js","components/PersonInfo.js","components/Calendar.js","components/Tweets.js","components/EventTimeline.js","components/TweetInfo.js","components/Footer.js","components/Content.js","requests.js","App.js","index.js"],"names":["Navigation","AppBar","style","alignItems","marginBottom","backgroundColor","position","Toolbar","variant","Typography","component","PersonInfo","person","togglePerson","Paper","username","padding","Grid","container","item","xs","Avatar","alt","name","src","profile_image_url","replace","height","width","gutterBottom","description","textAlign","Button","onClick","color","Calendar","selectDate","tweets","className","startDate","Date","endDate","values","classForValue","value","showWeekdayLabels","showMonthLabels","gutterSize","tooltipDataAttrs","date","horizontal","SentimentBar","styled","sentiment","other","props","chooseColor","TweetContainer","margin","borderRadius","borderBottom","borderTop","chooseBackground","Tweets","IconButton","aria-label","id","map","tweet","predicted_sent","key","elevation","tweetId","EventTimeline","Timeline","align","events","event","i","TimelineItem","TimelineSeparator","TimelineDot","length","TimelineConnector","TimelineContent","ButtonBase","TweetInfo","selectedTweets","useState","view","setView","spacing","paddingTop","md","ToggleButtonGroup","exclusive","onChange","newView","ToggleButton","dataSource","sourceType","screenName","options","Footer","href","Content","getUserInfo","a","config","headers","Authorization","process","axios","get","response","data","App","trumpInfo","setTrumpInfo","bidenInfo","setBidenInfo","setPerson","trumpTweets","setTrumpTweets","bidenTweets","setBidenTweets","setTweets","setSelectedTweets","selectColor","allTweets","sameDate","filter","t","neutScore","negScore","posScore","neut_score","neg_score","pos_score","maxScore","Math","max","useEffect","formatTweets","res","getPersonInfo","trumpData","bidenData","Fragment","CssBaseline","Container","maxWidth","sameDateTweets","CircularProgress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae6fdf3d.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, Typography, Toolbar } from \"@material-ui/core\";\n\nconst Navigation = () => {\n  return (\n    <AppBar\n      style={{\n        alignItems: \"center\",\n        marginBottom: \"16px\",\n        backgroundColor: \"#1d3557\",\n      }}\n      position=\"static\"\n    >\n      <Toolbar variant=\"dense\">\n        <Typography variant=\"h5\" component=\"h1\">\n          Tweet Analysis\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { Typography, Paper, Avatar, Grid, Button } from \"@material-ui/core\";\n\nconst PersonInfo = ({ person, togglePerson }) => {\n  return !person ? null : (\n    <Paper\n      style={{\n        backgroundColor:\n          person.username === \"realDonaldTrump\" ? \"#e63946\" : \"#2d75c5\",\n        padding: \"3em\",\n      }}\n    >\n      <Grid container>\n        <Grid item xs={8}>\n          <Avatar\n            alt={person.name}\n            src={person.profile_image_url.replace(\"_normal\", \"\")}\n            style={{ height: \"6em\", width: \"6em\", marginBottom: \"1em\" }}\n          />\n          <Typography variant=\"h5\">{person.name}</Typography>\n          <Typography variant=\"body2\" gutterBottom>\n            @{person.username}\n          </Typography>\n          <Typography variant=\"body1\">{person.description}</Typography>\n        </Grid>\n        <Grid item xs={4} style={{ textAlign: \"right\" }}>\n          <Button\n            onClick={togglePerson}\n            variant=\"contained\"\n            color={\n              person.username === \"realDonaldTrump\" ? \"primary\" : \"secondary\"\n            }\n          >\n            Change person\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default PersonInfo;\n","import React from \"react\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst Calendar = ({ selectDate, tweets }) => {\n  const getTooltip = (value) => {\n    return { \"data-tip\": value.date };\n  };\n\n  return !tweets ? null : (\n    <div className=\"calendar-container\">\n      <CalendarHeatmap\n        startDate={new Date(\"2019-12-25\")}\n        endDate={new Date(\"2020-10-14\")}\n        values={tweets}\n        classForValue={(value) => {\n          if (!value) {\n            return \"color-empty\";\n          }\n          return `color-scale-${value.color}`;\n        }}\n        showWeekdayLabels={true}\n        showMonthLabels={true}\n        gutterSize={2}\n        onClick={selectDate}\n        tooltipDataAttrs={getTooltip}\n        horizontal={false}\n      />\n      <ReactTooltip />\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport { styled } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Typography,\n  AppBar,\n  Toolbar,\n  IconButton,\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { Tweet } from \"react-twitter-widgets\";\n\nconst chooseColor = (sentiment) => {\n  switch (sentiment) {\n    case \"positive\":\n      return \"#7bb662\";\n    case \"neutral\":\n      return \"#f5d22c\";\n    case \"negative\":\n      return \"#e03c32\";\n    default:\n      return \"#A9A9A9\";\n  }\n};\n\nconst chooseBackground = (sentiment) => {\n  switch (sentiment) {\n    case \"positive\":\n      return \"#b7dba7\";\n    case \"neutral\":\n      return \"#ffe775\";\n    case \"negative\":\n      return \"#e6625a\";\n    default:\n      return \"#C0C0C0\";\n  }\n};\n\nconst SentimentBar = styled(({ sentiment, ...other }) => <AppBar {...other} />)(\n  {\n    backgroundColor: (props) => chooseColor(props.sentiment),\n    alignItems: \"center\",\n    color: \"black\",\n  }\n);\n\nconst TweetContainer = styled(({ sentiment, ...other }) => (\n  <Paper {...other} />\n))({\n  margin: \"0em 0 3em 0\",\n  padding: \"1em 0 1em 0\",\n  borderRadius: \"0px\",\n  borderBottom: \"1px solid gray\",\n  borderTop: \"1px solid gray\",\n  backgroundColor: (props) => chooseBackground(props.sentiment),\n});\n\nconst Tweets = ({ tweets, selectDate }) => {\n  return (\n    <>\n      <Typography variant=\"h5\" gutterBottom>\n        Tweets from {tweets[0].date}\n      </Typography>\n      <div className=\"scrollable-container\">\n        <IconButton aria-label=\"back\" onClick={() => selectDate(\"back\")}>\n          <ArrowBackIcon />\n        </IconButton>\n        <div id=\"scrollable\">\n          {tweets.map((tweet) => (\n            <TweetContainer\n              className=\"tweet\"\n              sentiment={tweet.predicted_sent}\n              key={tweet.id}\n              elevation={0}\n            >\n              <SentimentBar sentiment={tweet.predicted_sent} position=\"static\">\n                <Toolbar>\n                  <Typography>{tweet.predicted_sent}</Typography>\n                </Toolbar>\n              </SentimentBar>\n              <Tweet tweetId={tweet.id} />\n            </TweetContainer>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Tweets;\n","import React from \"react\";\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineDot,\n  TimelineConnector,\n  TimelineContent,\n} from \"@material-ui/lab\";\nimport { ButtonBase, Paper, Typography } from \"@material-ui/core\";\nimport events from \"../data/events.json\";\n\nconst EventTimeline = ({ selectDate }) => {\n  return (\n    <div className=\"calendar-container\">\n      <Timeline align=\"alternate\">\n        {events.map((event, i) => (\n          <TimelineItem key={event.event}>\n            <TimelineSeparator>\n              <TimelineDot />\n              {i !== events.length - 1 && <TimelineConnector />}\n            </TimelineSeparator>\n            <TimelineContent>\n              <Typography style={{ padding: \"0.5em\" }}>{event.date}</Typography>\n              <ButtonBase>\n                <Paper\n                  elevation={3}\n                  className=\"event-item\"\n                  onClick={() => selectDate({ date: event.date })}\n                >\n                  <Typography align=\"left\">{event.event}</Typography>\n                </Paper>\n              </ButtonBase>\n            </TimelineContent>\n          </TimelineItem>\n        ))}\n      </Timeline>\n    </div>\n  );\n};\n\nexport default EventTimeline;\n","import React, { useState } from \"react\";\nimport Calendar from \"./Calendar\";\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\nimport Tweets from \"./Tweets\";\nimport { Timeline } from \"react-twitter-widgets\";\nimport EventTimeline from \"./EventTimeline\";\n\nconst TweetInfo = ({ tweets, person, selectDate, selectedTweets }) => {\n  const [view, setView] = useState(\"sentiment\");\n\n  const handleViewChange = (event, newView) => {\n    if (newView) {\n      setView(newView);\n    }\n  };\n\n  if (!person) {\n    return null;\n  }\n\n  return (\n    <Paper style={{ backgroundColor: \"#eddcd2\", padding: \"3em\" }}>\n      <Grid container spacing={2} style={{ paddingTop: \"3em\" }}>\n        <Grid item xs={12} md={5} style={{ marginBottom: \"3em\" }}>\n          <div style={{ textAlign: \"center\", marginBottom: \"1.5em\" }}>\n            <ToggleButtonGroup\n              value={view}\n              exclusive\n              onChange={handleViewChange}\n              aria-label=\"button group for timeline\"\n            >\n              <ToggleButton value=\"sentiment\">sentiment</ToggleButton>\n              <ToggleButton value=\"event\">events</ToggleButton>\n            </ToggleButtonGroup>\n          </div>\n          {view === \"sentiment\" ? (\n            <Calendar selectDate={selectDate} tweets={tweets} />\n          ) : (\n            <EventTimeline selectDate={selectDate} />\n          )}\n        </Grid>\n        <Grid item md={1}></Grid>\n        <Grid item xs={12} md={6}>\n          {!selectedTweets ? (\n            <div>\n              <Typography variant=\"h5\" style={{ marginBottom: \"1.5em\" }}>\n                Most recent tweets\n              </Typography>\n              <Timeline\n                dataSource={{\n                  sourceType: \"profile\",\n                  screenName: person.username,\n                }}\n                options={{\n                  height: \"35em\",\n                }}\n              />\n            </div>\n          ) : (\n            <div>\n              <Tweets tweets={selectedTweets} selectDate={selectDate} />\n            </div>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default TweetInfo;\n","import React from \"react\";\nimport { IconButton, Typography } from \"@material-ui/core\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Typography\n        variant=\"h6\"\n        align=\"center\"\n        color=\"textSecondary\"\n        gutterBottom\n      >\n        Project source\n      </Typography>\n      <div style={{ textAlign: \"center\" }}>\n        <IconButton href=\"https://github.com/ilmarikyl/intro_to_ds_2020_project\">\n          <GitHubIcon />\n        </IconButton>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PersonInfo from \"./PersonInfo\";\nimport TweetInfo from \"./TweetInfo\";\nimport Footer from \"./Footer\";\n\nconst Content = ({\n  person,\n  tweets,\n  togglePerson,\n  selectDate,\n  selectedTweets,\n}) => {\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <PersonInfo person={person} togglePerson={togglePerson} />\n      </Grid>\n      <Grid item xs={12}>\n        <TweetInfo\n          person={person}\n          tweets={tweets}\n          selectDate={selectDate}\n          selectedTweets={selectedTweets}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Footer />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Content;\n","import axios from \"axios\";\n\nexport const getUserInfo = async () => {\n  const config = {\n    headers: {\n      Authorization: `bearer ${process.env.REACT_APP_TOKEN}`,\n    },\n  };\n\n  const response = await axios.get(\n    `https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/users/by?usernames=realdonaldtrump,joebiden&user.fields=description,profile_image_url`,\n    config\n  );\n  return response.data;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Container, CssBaseline, CircularProgress } from \"@material-ui/core\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport Content from \"./components/Content\";\nimport { getUserInfo } from \"./requests\";\nimport trumpData from \"./data/trump_tweets.json\";\nimport bidenData from \"./data/biden_tweets.json\";\n\nconst App = () => {\n  const [trumpInfo, setTrumpInfo] = useState(null);\n  const [bidenInfo, setBidenInfo] = useState(null);\n  const [person, setPerson] = useState(null);\n  const [trumpTweets, setTrumpTweets] = useState(null);\n  const [bidenTweets, setBidenTweets] = useState(null);\n  const [tweets, setTweets] = useState(null);\n  const [selectedTweets, setSelectedTweets] = useState(null);\n\n  const selectColor = (tweet, allTweets) => {\n    const sameDate = allTweets.filter((t) => t.date === tweet.date);\n\n    let neutScore = 0;\n    let negScore = 0;\n    let posScore = 0;\n    for (let i = 0; i < sameDate.length; i++) {\n      neutScore += sameDate[i].neut_score;\n      negScore += sameDate[i].neg_score;\n      posScore += sameDate[i].pos_score;\n    }\n\n    const maxScore = Math.max(neutScore, negScore, posScore);\n\n    if (maxScore === posScore) {\n      return \"0\";\n    } else if (maxScore === neutScore) {\n      return \"1\";\n    } else if (maxScore === negScore) {\n      return \"2\";\n    }\n  };\n\n  useEffect(() => {\n    const getPersonInfo = async () => {\n      const res = await getUserInfo();\n      setTrumpInfo(res.data[0]);\n      setBidenInfo(res.data[1]);\n      setPerson(res.data[0]);\n    };\n\n    const formatTweets = (data) => {\n      const formattedTweets = data.map((tweet) => {\n        return {\n          ...tweet,\n          color: selectColor(tweet, data),\n        };\n      });\n      return formattedTweets;\n    };\n\n    getPersonInfo();\n    setTrumpTweets(formatTweets(trumpData));\n    setBidenTweets(formatTweets(bidenData));\n    setTweets(formatTweets(trumpData));\n  }, []);\n\n  const togglePerson = () => {\n    if (person.username === \"realDonaldTrump\") {\n      setPerson(bidenInfo);\n      setTweets(bidenTweets);\n      if (selectedTweets) {\n        setSelectedTweets(\n          bidenTweets.filter((t) => t.date === selectedTweets[0].date)\n        );\n      }\n    } else if (person.username === \"JoeBiden\") {\n      setPerson(trumpInfo);\n      setTweets(trumpTweets);\n      if (selectedTweets) {\n        setSelectedTweets(\n          trumpTweets.filter((t) => t.date === selectedTweets[0].date)\n        );\n      }\n    }\n  };\n\n  const selectDate = (value) => {\n    if (!value) {\n      return;\n    }\n    if (value === \"back\") {\n      setSelectedTweets(null);\n      return;\n    }\n    const sameDateTweets = tweets.filter((t) => t.date === value.date);\n    setSelectedTweets(sameDateTweets);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Navigation />\n        {!person ? (\n          <div className=\"spinner\">\n            <CircularProgress />\n          </div>\n        ) : (\n          <Content\n            person={person}\n            tweets={tweets}\n            togglePerson={togglePerson}\n            selectDate={selectDate}\n            selectedTweets={selectedTweets}\n          />\n        )}\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}