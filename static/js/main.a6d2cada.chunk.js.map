{"version":3,"sources":["components/Navigation.js","components/PersonInfo.js","components/Calendar.js","components/Tweets.js","components/TweetInfo.js","components/Content.js","requests.js","App.js","index.js"],"names":["Navigation","AppBar","style","alignItems","marginBottom","backgroundColor","position","Toolbar","variant","Typography","component","PersonInfo","person","togglePerson","Paper","username","padding","Grid","container","item","xs","Avatar","alt","name","src","profile_image_url","replace","height","width","gutterBottom","description","textAlign","Button","onClick","color","Calendar","selectDate","tweets","className","startDate","Date","endDate","values","classForValue","value","showWeekdayLabels","gutterSize","tooltipDataAttrs","date","horizontal","SentimentBar","styled","sentiment","other","props","chooseColor","TweetContainer","margin","borderRadius","borderBottom","borderTop","chooseBackground","Tweets","elevation","id","map","tweet","predicted_sent","key","tweetId","TweetInfo","useState","selectedTweets","setSelectedTweets","spacing","paddingTop","md","sameDateTweets","filter","t","dataSource","sourceType","screenName","options","Content","getUserInfo","a","config","headers","Authorization","process","axios","get","response","data","App","trumpInfo","setTrumpInfo","bidenInfo","setBidenInfo","setPerson","trumpTweets","setTrumpTweets","bidenTweets","setBidenTweets","setTweets","selectColor","allTweets","sameDate","neutScore","negScore","posScore","i","length","neut_score","neg_score","pos_score","maxScore","Math","max","useEffect","formatTweets","res","getPersonInfo","trumpData","bidenData","Fragment","CssBaseline","Container","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6d2cada.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, Typography, Toolbar } from \"@material-ui/core\";\n\nconst Navigation = () => {\n  return (\n    <AppBar\n      style={{\n        alignItems: \"center\",\n        marginBottom: \"16px\",\n        backgroundColor: \"#1d3557\",\n      }}\n      position=\"static\"\n    >\n      <Toolbar variant=\"dense\">\n        <Typography variant=\"h5\" component=\"h1\">\n          Tweet Analysis\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { Typography, Paper, Avatar, Grid, Button } from \"@material-ui/core\";\n\nconst PersonInfo = ({ person, togglePerson }) => {\n  return !person ? null : (\n    <Paper\n      style={{\n        backgroundColor:\n          person.username === \"realDonaldTrump\" ? \"#e63946\" : \"#2d75c5\",\n        padding: \"3em\",\n      }}\n    >\n      <Grid container>\n        <Grid item xs={8}>\n          <Avatar\n            alt={person.name}\n            src={person.profile_image_url.replace(\"_normal\", \"\")}\n            style={{ height: \"6em\", width: \"6em\", marginBottom: \"1em\" }}\n          />\n          <Typography variant=\"h5\">{person.name}</Typography>\n          <Typography variant=\"body2\" gutterBottom>\n            @{person.username}\n          </Typography>\n          <Typography variant=\"body1\">{person.description}</Typography>\n        </Grid>\n        <Grid item xs={4} style={{ textAlign: \"right\" }}>\n          <Button\n            onClick={togglePerson}\n            variant=\"contained\"\n            color={\n              person.username === \"realDonaldTrump\" ? \"primary\" : \"secondary\"\n            }\n          >\n            Change person\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default PersonInfo;\n","import React from \"react\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst Calendar = ({ selectDate, tweets }) => {\n  const getTooltip = (value) => {\n    return { \"data-tip\": value.date };\n  };\n\n  return !tweets ? null : (\n    <div className=\"calendar-container\">\n      <CalendarHeatmap\n        startDate={new Date(\"2019-12-25\")}\n        endDate={new Date(\"2020-10-14\")}\n        values={tweets}\n        classForValue={(value) => {\n          if (!value) {\n            return \"color-empty\";\n          }\n          return `color-scale-${value.color}`;\n        }}\n        showWeekdayLabels={true}\n        gutterSize={2}\n        onClick={selectDate}\n        tooltipDataAttrs={getTooltip}\n        horizontal={false}\n      />\n      <ReactTooltip />\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport { styled } from \"@material-ui/core/styles\";\nimport { Paper, Typography, AppBar, Toolbar } from \"@material-ui/core\";\nimport { Tweet } from \"react-twitter-widgets\";\n\nconst chooseColor = (sentiment) => {\n  switch (sentiment) {\n    case \"positive\":\n      return \"#7bb662\";\n    case \"neutral\":\n      return \"#f5d22c\";\n    case \"negative\":\n      return \"#e03c32\";\n    default:\n      return \"#A9A9A9\";\n  }\n};\n\nconst chooseBackground = (sentiment) => {\n  switch (sentiment) {\n    case \"positive\":\n      return \"#b7dba7\";\n    case \"neutral\":\n      return \"#ffe775\";\n    case \"negative\":\n      return \"#e6625a\";\n    default:\n      return \"#C0C0C0\";\n  }\n};\n\nconst SentimentBar = styled(({ sentiment, ...other }) => <AppBar {...other} />)(\n  {\n    backgroundColor: (props) => chooseColor(props.sentiment),\n    alignItems: \"center\",\n    color: \"black\",\n  }\n);\n\nconst TweetContainer = styled(({ sentiment, ...other }) => (\n  <Paper {...other} />\n))({\n  margin: \"0.5em 0 3em 0\",\n  padding: \"1em 0 1em 0\",\n  borderRadius: \"0px\",\n  borderBottom: \"1px solid gray\",\n  borderTop: \"1px solid gray\",\n  backgroundColor: (props) => chooseBackground(props.sentiment),\n});\n\nconst Tweets = ({ tweets }) => {\n  return (\n    <>\n      <Typography variant=\"h5\" gutterBottom>\n        Tweets from {tweets[0].date}\n      </Typography>\n      <Paper elevation={0} style={{ padding: \"2em 0 2em 0\" }}>\n        <div id=\"scrollable\">\n          {tweets.map((tweet) => (\n            <TweetContainer\n              sentiment={tweet.predicted_sent}\n              key={tweet.id}\n              elevation={0}\n            >\n              <SentimentBar sentiment={tweet.predicted_sent} position=\"static\">\n                <Toolbar>\n                  <Typography>{tweet.predicted_sent}</Typography>\n                </Toolbar>\n              </SentimentBar>\n              <Tweet tweetId={tweet.id} />\n            </TweetContainer>\n          ))}\n        </div>\n      </Paper>\n    </>\n  );\n};\n\nexport default Tweets;\n","import React, { useState } from \"react\";\nimport Calendar from \"./Calendar\";\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\nimport { Timeline } from \"react-twitter-widgets\";\nimport Tweets from \"./Tweets\";\n\nconst TweetInfo = ({ tweets, person }) => {\n  const [selectedTweets, setSelectedTweets] = useState(null);\n\n  const selectDate = (value) => {\n    if (!value) {\n      return;\n    }\n    const sameDateTweets = tweets.filter((t) => t.date === value.date);\n    setSelectedTweets(sameDateTweets);\n  };\n  if (!person) {\n    return null;\n  }\n  return (\n    <Paper style={{ backgroundColor: \"#eddcd2\", padding: \"3em\" }}>\n      <Grid container spacing={2} style={{ paddingTop: \"3em\" }}>\n        <Grid item xs={12} md={5}>\n          <Typography variant=\"h5\" gutterBottom>\n            Tweet timeline\n          </Typography>\n          <Calendar selectDate={selectDate} tweets={tweets} />\n        </Grid>\n        <Grid item md={1}></Grid>\n        <Grid item xs={12} md={6}>\n          {!selectedTweets ? (\n            <div>\n              <Typography variant=\"h5\" gutterBottom>\n                Most recent tweets\n              </Typography>\n              <Timeline\n                dataSource={{\n                  sourceType: \"profile\",\n                  screenName: person.username,\n                }}\n                options={{\n                  height: \"35em\",\n                }}\n              />\n            </div>\n          ) : (\n            <div>\n              <Tweets tweets={selectedTweets} />\n            </div>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default TweetInfo;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PersonInfo from \"./PersonInfo\";\nimport TweetInfo from \"./TweetInfo\";\n\nconst Content = ({ person, tweets, togglePerson }) => {\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <PersonInfo person={person} togglePerson={togglePerson} />\n      </Grid>\n      <Grid item xs={12}>\n        <TweetInfo person={person} tweets={tweets} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Content;\n","import axios from \"axios\";\n\nexport const getUserInfo = async () => {\n  const config = {\n    headers: {\n      Authorization: `bearer ${process.env.REACT_APP_TOKEN}`,\n    },\n  };\n\n  const response = await axios.get(\n    `https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/users/by?usernames=realdonaldtrump,joebiden&user.fields=description,profile_image_url`,\n    config\n  );\n  return response.data;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Container, CssBaseline } from \"@material-ui/core\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport Content from \"./components/Content\";\nimport { getUserInfo } from \"./requests\";\nimport trumpData from \"./data/trump_tweets.json\";\nimport bidenData from \"./data/biden_tweets.json\";\n\nconst App = () => {\n  const [trumpInfo, setTrumpInfo] = useState(null);\n  const [bidenInfo, setBidenInfo] = useState(null);\n  const [person, setPerson] = useState(null);\n  const [trumpTweets, setTrumpTweets] = useState(null);\n  const [bidenTweets, setBidenTweets] = useState(null);\n  const [tweets, setTweets] = useState(null);\n\n  const selectColor = (tweet, allTweets) => {\n    const sameDate = allTweets.filter((t) => t.date === tweet.date);\n\n    let neutScore = 0;\n    let negScore = 0;\n    let posScore = 0;\n    for (let i = 0; i < sameDate.length; i++) {\n      neutScore += sameDate[i].neut_score;\n      negScore += sameDate[i].neg_score;\n      posScore += sameDate[i].pos_score;\n    }\n\n    const maxScore = Math.max(neutScore, negScore, posScore);\n\n    if (maxScore === posScore) {\n      return \"0\";\n    } else if (maxScore === neutScore) {\n      return \"1\";\n    } else if (maxScore === negScore) {\n      return \"2\";\n    }\n  };\n\n  useEffect(() => {\n    const getPersonInfo = async () => {\n      const res = await getUserInfo();\n      setTrumpInfo(res.data[0]);\n      setBidenInfo(res.data[1]);\n      setPerson(res.data[0]);\n    };\n\n    const formatTweets = (data) => {\n      const formattedTweets = data.map((tweet) => {\n        return {\n          ...tweet,\n          color: selectColor(tweet, data),\n        };\n      });\n      return formattedTweets;\n    };\n\n    getPersonInfo();\n    setTrumpTweets(formatTweets(trumpData));\n    setBidenTweets(formatTweets(bidenData));\n    setTweets(formatTweets(trumpData));\n  }, []);\n\n  const togglePerson = () => {\n    if (person.username === \"realDonaldTrump\") {\n      setPerson(bidenInfo);\n      setTweets(bidenTweets);\n    } else if (person.username === \"JoeBiden\") {\n      setPerson(trumpInfo);\n      setTweets(trumpTweets);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Navigation />\n        <Content person={person} tweets={tweets} togglePerson={togglePerson} />\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}