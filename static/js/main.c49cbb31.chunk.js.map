{"version":3,"sources":["components/Navigation.js","components/PersonInfo.js","components/Calendar.js","components/TweetInfo.js","components/Content.js","requests.js","App.js","index.js"],"names":["Navigation","AppBar","style","alignItems","marginBottom","backgroundColor","position","Toolbar","variant","Typography","component","PersonInfo","person","console","log","Paper","padding","Grid","container","item","xs","Avatar","alt","name","src","profile_image_url","replace","height","width","gutterBottom","username","description","today","Date","Calendar","selectDate","shiftDate","date","numDays","newDate","setDate","getDate","count","randomValues","Array","from","length","_","i","map","index","min","max","Math","floor","random","startDate","endDate","values","classForValue","value","showWeekdayLabels","gutterSize","onClick","tooltipDataAttrs","TweetInfo","spacing","paddingTop","md","dataSource","sourceType","screenName","options","Content","getUserInfo","a","config","headers","Authorization","axios","get","response","data","App","useState","setPerson","useEffect","user","getPersonInfo","Fragment","CssBaseline","Container","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c49cbb31.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, Typography, Toolbar } from \"@material-ui/core\";\n\nconst Navigation = () => {\n  return (\n    <AppBar\n      style={{\n        alignItems: \"center\",\n        marginBottom: \"16px\",\n        backgroundColor: \"#1d3557\",\n      }}\n      position=\"static\"\n    >\n      <Toolbar variant=\"dense\">\n        <Typography variant=\"h5\" component=\"h1\">\n          Fuck 2020\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { Typography, Paper, Avatar, Grid } from \"@material-ui/core\";\n\nconst PersonInfo = ({ person }) => {\n  console.log(\"person\", person);\n\n  return !person ? null : (\n    <Paper style={{ backgroundColor: \"#e63946\", padding: \"3em\" }}>\n      <Grid container>\n        <Grid item xs={12}>\n          <Avatar\n            alt={person.name}\n            src={person.profile_image_url.replace(\"_normal\", \"\")}\n            style={{ height: \"5em\", width: \"5em\", marginBottom: \"1em\" }}\n          />\n          <Typography variant=\"h5\">{person.name}</Typography>\n          <Typography variant=\"body2\" gutterBottom>\n            @{person.username}\n          </Typography>\n          <Typography variant=\"body1\">{person.description}</Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default PersonInfo;\n","import React from \"react\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst today = new Date();\n\nconst Calendar = ({ selectDate }) => {\n  const getTooltip = (value) => {\n    return { \"data-tip\": value.date };\n  };\n\n  function shiftDate(date, numDays) {\n    const newDate = new Date(date);\n    newDate.setDate(newDate.getDate() + numDays);\n    return newDate;\n  }\n\n  function getRange(count) {\n    return Array.from({ length: count }, (_, i) => i);\n  }\n\n  function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  const randomValues = getRange(300).map((index) => {\n    return {\n      date: shiftDate(today, -index),\n      count: getRandomInt(0, 2),\n    };\n  });\n\n  return (\n    <>\n      <CalendarHeatmap\n        startDate={new Date(\"2019-12-31\")}\n        endDate={new Date(\"2020-06-01\")}\n        values={randomValues}\n        classForValue={(value) => {\n          if (!value) {\n            return \"color-empty\";\n          }\n          return `color-scale-${value.count}`;\n        }}\n        showWeekdayLabels={true}\n        gutterSize={2}\n        onClick={selectDate}\n        tooltipDataAttrs={getTooltip}\n      />\n      <ReactTooltip />\n    </>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport Calendar from \"./Calendar\";\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\nimport { Timeline } from \"react-twitter-widgets\";\n\nconst TweetInfo = () => {\n  // const [selected, setSelected] = useState(null);\n\n  const selectDate = (value) => {\n    console.log(\"value\", value);\n    // setSelected(value.date);\n  };\n  return (\n    <Paper style={{ backgroundColor: \"#eddcd2\", padding: \"3em\" }}>\n      <Grid container spacing={2} style={{ paddingTop: \"3em\" }}>\n        <Grid item xs={12} md={6}>\n          <Typography variant=\"h5\" gutterBottom>\n            Tweet timeline\n          </Typography>\n          <Calendar selectDate={selectDate} />\n        </Grid>\n        <Grid item md={1}></Grid>\n        <Grid item xs={12} md={5}>\n          <Typography variant=\"h5\" gutterBottom>\n            Summary of a day\n          </Typography>\n          {/* <Paper style={{ backgroundColor: \"#f0efeb\", height: \"100%\" }}>\n            <Typography variant=\"body1\" style={{ fontWeight: 400 }}>\n              More info here ...\n            </Typography>\n          </Paper> */}\n          <Timeline\n            dataSource={{\n              sourceType: \"profile\",\n              screenName: \"realdonaldtrump\",\n            }}\n            options={{\n              height: \"400\",\n            }}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default TweetInfo;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PersonInfo from \"./PersonInfo\";\nimport TweetInfo from \"./TweetInfo\";\n\nconst Content = ({ person }) => {\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <PersonInfo person={person} />\n      </Grid>\n      <Grid item xs={12}>\n        <TweetInfo />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Content;\n","import axios from \"axios\";\n\nexport const getUserInfo = async () => {\n  const config = {\n    headers: {\n      Authorization: `bearer AAAAAAAAAAAAAAAAAAAAAFiJHQEAAAAABKimrn2siB%2BSXIJ6s7jwYCgT5pA%3D1PV5oKppu8jR5NTWx26R0dKUHGdWOhTqlwFmaUQmuKxLfA245z`,\n    },\n  };\n\n  const response = await axios.get(\n    `https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/users/by?usernames=realdonaldtrump&user.fields=description,profile_image_url`,\n    config\n  );\n  return response.data;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Container, CssBaseline } from \"@material-ui/core\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport Content from \"./components/Content\";\nimport { getUserInfo } from \"./requests\";\n\nconst App = () => {\n  const [person, setPerson] = useState(null);\n\n  useEffect(() => {\n    const getPersonInfo = async () => {\n      const user = await getUserInfo();\n      setPerson(user.data[0]);\n    };\n    getPersonInfo();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Navigation />\n        <Content person={person} />\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}