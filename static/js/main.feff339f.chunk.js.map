{"version":3,"sources":["components/Navigation.js","components/PersonInfo.js","components/Calendar.js","components/DaySummary.js","components/Tweets.js","components/EventTimeline.js","components/TweetInfo.js","components/Footer.js","components/Graphs.js","components/Content.js","requests.js","App.js","index.js","imgs/biden_sent_distr.svg","imgs/trump_sent_distr.svg","imgs/biden_mentioned_sent_distr.svg","imgs/trump_mentioned_sent_distr.svg","imgs/wordcloud_biden_logo.svg","imgs/wordcloud_trump_logo.svg"],"names":["Navigation","AppBar","style","alignItems","marginBottom","backgroundColor","position","Toolbar","variant","Typography","component","PersonInfo","person","togglePerson","Paper","className","username","Grid","container","item","xs","Avatar","alt","name","src","profile_image_url","replace","height","width","textAlign","Button","onClick","color","sm","gutterBottom","description","Calendar","selectDate","tweets","startDate","Date","endDate","values","classForValue","value","showWeekdayLabels","showMonthLabels","gutterSize","tooltipDataAttrs","date","horizontal","DaySummary","chooseColor","OverallSentiment","styled","sentiment","other","props","padding","borderRadius","information","console","log","pos","neut","neg","posScore","neutScore","negScore","mentions","overall","i","length","pos_score","neut_score","neg_score","opponent_mentioned","predicted_sent","amount","createSummary","IconButton","aria-label","top","left","fontWeight","SentimentBar","boxShadow","TweetContainer","margin","borderBottom","borderTop","chooseBackground","Tweets","id","map","tweet","key","elevation","toUpperCase","tweetId","EventTimeline","Timeline","align","events","event","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","ButtonBase","TweetInfo","selectedTweets","useState","view","setView","spacing","paddingTop","ToggleButtonGroup","exclusive","onChange","newView","ToggleButton","dataSource","sourceType","screenName","options","Footer","href","Graphs","bidenCloud","bidenGraph","trumpMentioned","trumpCloud","trumpGraph","bidenMentioned","Content","getUserInfo","a","config","headers","Authorization","process","axios","get","response","data","theme","createMuiTheme","breakpoints","md","lg","xl","App","trumpInfo","setTrumpInfo","bidenInfo","setBidenInfo","setPerson","trumpTweets","setTrumpTweets","bidenTweets","setBidenTweets","setTweets","setSelectedTweets","selectColor","allTweets","sameDate","filter","t","maxScore","Math","max","useEffect","formatTweets","res","getPersonInfo","trumpData","bidenData","ThemeProvider","CssBaseline","Container","maxWidth","sameDateTweets","CircularProgress","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.feff339f.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, Typography, Toolbar } from \"@material-ui/core\";\n\nconst Navigation = () => {\n  return (\n    <AppBar\n      style={{\n        alignItems: \"center\",\n        marginBottom: \"16px\",\n        backgroundColor: \"#1d3557\",\n      }}\n      position=\"static\"\n    >\n      <Toolbar variant=\"dense\">\n        <Typography variant=\"h5\" component=\"h1\">\n          Tweet Analysis\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { Typography, Paper, Avatar, Grid, Button } from \"@material-ui/core\";\n\nconst PersonInfo = ({ person, togglePerson }) => {\n  return !person ? null : (\n    <Paper\n      className=\"segment\"\n      style={{\n        backgroundColor:\n          person.username === \"realDonaldTrump\" ? \"#e63946\" : \"#2d75c5\",\n      }}\n    >\n      <Grid container>\n        <Grid item xs={8}>\n          <Avatar\n            alt={person.name}\n            src={person.profile_image_url.replace(\"_normal\", \"\")}\n            style={{ height: \"6em\", width: \"6em\", marginBottom: \"1em\" }}\n          />\n        </Grid>\n        <Grid item xs={4} style={{ textAlign: \"right\" }}>\n          <Button\n            onClick={togglePerson}\n            variant=\"contained\"\n            color={\n              person.username === \"realDonaldTrump\" ? \"primary\" : \"secondary\"\n            }\n          >\n            Change person\n          </Button>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h5\">{person.name}</Typography>\n          <Typography variant=\"body2\" gutterBottom>\n            @{person.username}\n          </Typography>\n          <Typography variant=\"body1\">{person.description}</Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default PersonInfo;\n","import React from \"react\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst Calendar = ({ selectDate, tweets }) => {\n  const getTooltip = (value) => {\n    return { \"data-tip\": value.date };\n  };\n\n  return !tweets ? null : (\n    <div className=\"calendar-container\">\n      <CalendarHeatmap\n        startDate={new Date(\"2019-12-25\")}\n        endDate={new Date(\"2020-10-14\")}\n        values={tweets}\n        classForValue={(value) => {\n          if (!value) {\n            return \"color-empty\";\n          }\n          return `color-scale-${value.color}`;\n        }}\n        showWeekdayLabels={true}\n        showMonthLabels={true}\n        gutterSize={2}\n        onClick={selectDate}\n        tooltipDataAttrs={getTooltip}\n        horizontal={false}\n      />\n      <ReactTooltip />\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport { Typography, IconButton } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\nconst DaySummary = ({ tweets, chooseColor, selectDate }) => {\n  const createSummary = () => {\n    console.log(\"twiitit\", tweets);\n    let pos = 0;\n    let neut = 0;\n    let neg = 0;\n    let posScore = 0;\n    let neutScore = 0;\n    let negScore = 0;\n    let mentions = 0;\n\n    const overall =\n      tweets[0].color === \"0\"\n        ? \"positive\"\n        : tweets[0].color === \"1\"\n        ? \"neutral\"\n        : \"negative\";\n\n    for (let i = 0; i < tweets.length; i++) {\n      posScore += tweets[i].pos_score;\n      neutScore += tweets[i].neut_score;\n      negScore += tweets[i].neg_score;\n\n      if (tweets[i].opponent_mentioned) {\n        mentions += 1;\n      }\n\n      if (tweets[i].predicted_sent === \"positive\") {\n        pos += 1;\n      } else if (tweets[i].predicted_sent === \"neutral\") {\n        neut += 1;\n      } else if (tweets[i].predicted_sent === \"negative\") {\n        neg += 1;\n      }\n    }\n    return {\n      pos,\n      neut,\n      neg,\n      posScore,\n      neutScore,\n      negScore,\n      amount: tweets.length,\n      overall,\n      mentions,\n    };\n  };\n\n  const OverallSentiment = styled(({ sentiment, ...other }) => (\n    <div {...other} />\n  ))({\n    backgroundColor: (props) => chooseColor(props.sentiment),\n    textAlign: \"center\",\n    position: \"relative\",\n    padding: \"1em 0 1em 0\",\n    borderRadius: \"0.5em 0.5em 0 0\",\n  });\n\n  const information = createSummary();\n  return (\n    <OverallSentiment sentiment={information.overall}>\n      <IconButton\n        aria-label=\"back\"\n        onClick={() => selectDate(\"back\")}\n        style={{ position: \"absolute\", top: \"0\", left: \"0\" }}\n      >\n        <ArrowBackIcon />\n      </IconButton>\n      <Typography variant=\"h6\" style={{ fontWeight: \"400\" }}>\n        {tweets[0].date} was {information.overall}\n      </Typography>\n      <Typography variant=\"subtitle1\" style={{ fontWeight: \"300\" }}>\n        {information.pos} positive, {information.neut} neutral,{\" \"}\n        {information.neg} negative\n      </Typography>\n      <Typography variant=\"subtitle1\" style={{ fontWeight: \"300\" }}>\n        Opponent mentioned {information.mentions} times\n      </Typography>\n    </OverallSentiment>\n  );\n};\n\nexport default DaySummary;\n","import React from \"react\";\nimport { styled } from \"@material-ui/core/styles\";\nimport { Paper, Typography } from \"@material-ui/core\";\nimport { Tweet } from \"react-twitter-widgets\";\nimport DaySummary from \"./DaySummary\";\n\nconst chooseColor = (sentiment) => {\n  switch (sentiment) {\n    case \"positive\":\n      return \"#7bb662\";\n    case \"neutral\":\n      return \"#f5d22c\";\n    case \"negative\":\n      return \"#e03c32\";\n    default:\n      return \"#A9A9A9\";\n  }\n};\n\nconst chooseBackground = (sentiment) => {\n  switch (sentiment) {\n    case \"positive\":\n      return \"#b7dba7\";\n    case \"neutral\":\n      return \"#ffe775\";\n    case \"negative\":\n      return \"#e6625a\";\n    default:\n      return \"#C0C0C0\";\n  }\n};\n\nconst SentimentBar = styled(({ sentiment, ...other }) => <div {...other} />)({\n  backgroundColor: (props) => chooseColor(props.sentiment),\n  textAlign: \"center\",\n  padding: \"1em 0 1em 0\",\n  boxShadow:\n    \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\n});\n\nconst TweetContainer = styled(({ sentiment, ...other }) => (\n  <Paper {...other} />\n))({\n  margin: \"0em 0 3em 0\",\n  padding: \"1em 0 1em 0\",\n  borderRadius: \"0px\",\n  borderBottom: \"1px solid gray\",\n  borderTop: \"1px solid gray\",\n  backgroundColor: (props) => chooseBackground(props.sentiment),\n});\n\nconst Tweets = ({ tweets, selectDate }) => {\n  return (\n    <>\n      <DaySummary\n        tweets={tweets}\n        chooseColor={chooseColor}\n        selectDate={selectDate}\n      />\n      <div className=\"scrollable-container\">\n        <div id=\"scrollable\">\n          {tweets.map((tweet) => (\n            <TweetContainer\n              className=\"tweet\"\n              sentiment={tweet.predicted_sent}\n              key={tweet.id}\n              elevation={0}\n            >\n              <SentimentBar sentiment={tweet.predicted_sent} position=\"static\">\n                <Typography variant=\"subtitle1\" style={{ fontWeight: \"400\" }}>\n                  {tweet.predicted_sent.toUpperCase()}\n                </Typography>\n                {tweet.opponent_mentioned && (\n                  <Typography variant=\"subtitle2\" style={{ fontWeight: \"400\" }}>\n                    Opponent mentioned\n                  </Typography>\n                )}\n              </SentimentBar>\n              <Tweet tweetId={tweet.id} />\n            </TweetContainer>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Tweets;\n","import React from \"react\";\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineDot,\n  TimelineConnector,\n  TimelineContent,\n} from \"@material-ui/lab\";\nimport { ButtonBase, Paper, Typography } from \"@material-ui/core\";\nimport events from \"../data/events.json\";\n\nconst EventTimeline = ({ selectDate }) => {\n  return (\n    <div className=\"calendar-container\">\n      <Timeline align=\"alternate\">\n        {events.map((event, i) => (\n          <TimelineItem key={event.event}>\n            <TimelineSeparator>\n              <TimelineDot />\n              {i !== events.length - 1 && <TimelineConnector />}\n            </TimelineSeparator>\n            <TimelineContent>\n              <Typography style={{ padding: \"0.5em\" }}>{event.date}</Typography>\n              <ButtonBase>\n                <Paper\n                  elevation={3}\n                  className=\"event-item\"\n                  onClick={() => selectDate({ date: event.date })}\n                >\n                  <Typography align=\"left\">{event.event}</Typography>\n                </Paper>\n              </ButtonBase>\n            </TimelineContent>\n          </TimelineItem>\n        ))}\n      </Timeline>\n    </div>\n  );\n};\n\nexport default EventTimeline;\n","import React, { useState } from \"react\";\nimport Calendar from \"./Calendar\";\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\nimport { ToggleButtonGroup, ToggleButton } from \"@material-ui/lab\";\nimport Tweets from \"./Tweets\";\nimport { Timeline } from \"react-twitter-widgets\";\nimport EventTimeline from \"./EventTimeline\";\n\nconst TweetInfo = ({ tweets, person, selectDate, selectedTweets }) => {\n  const [view, setView] = useState(\"sentiment\");\n\n  const handleViewChange = (event, newView) => {\n    if (newView) {\n      setView(newView);\n    }\n  };\n\n  if (!person) {\n    return null;\n  }\n\n  return (\n    <Paper className=\"segment\" style={{ backgroundColor: \"#eddcd2\" }}>\n      <Grid container spacing={3} style={{ paddingTop: \"3em\" }}>\n        <Grid item xs={12} sm={5} style={{ marginBottom: \"3em\" }}>\n          <div style={{ textAlign: \"center\", marginBottom: \"2.5em\" }}>\n            <ToggleButtonGroup\n              value={view}\n              exclusive\n              onChange={handleViewChange}\n              aria-label=\"button group for timeline\"\n            >\n              <ToggleButton value=\"sentiment\">sentiment</ToggleButton>\n              <ToggleButton value=\"event\">events</ToggleButton>\n            </ToggleButtonGroup>\n          </div>\n          {view === \"sentiment\" ? (\n            <Calendar selectDate={selectDate} tweets={tweets} />\n          ) : (\n            <EventTimeline selectDate={selectDate} />\n          )}\n        </Grid>\n        <Grid item sm={1}></Grid>\n        <Grid item xs={12} sm={6}>\n          {!selectedTweets ? (\n            <div>\n              <Typography variant=\"h5\" style={{ marginBottom: \"2em\" }}>\n                Most recent tweets\n              </Typography>\n              <Timeline\n                dataSource={{\n                  sourceType: \"profile\",\n                  screenName: person.username,\n                }}\n                options={{\n                  height: \"40em\",\n                }}\n              />\n            </div>\n          ) : (\n            <div>\n              <Tweets tweets={selectedTweets} selectDate={selectDate} />\n            </div>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default TweetInfo;\n","import React from \"react\";\nimport { IconButton, Typography } from \"@material-ui/core\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Typography\n        variant=\"h6\"\n        align=\"center\"\n        color=\"textSecondary\"\n        gutterBottom\n      >\n        Source code\n      </Typography>\n      <div style={{ textAlign: \"center\" }}>\n        <IconButton href=\"https://github.com/ilmarikyl/intro_to_ds_2020_project\">\n          <GitHubIcon />\n        </IconButton>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { Paper, Typography, Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport bidenGraph from \"../imgs/biden_sent_distr.svg\";\nimport trumpGraph from \"../imgs/trump_sent_distr.svg\";\nimport bidenMentioned from \"../imgs/biden_mentioned_sent_distr.svg\";\nimport trumpMentioned from \"../imgs/trump_mentioned_sent_distr.svg\";\nimport bidenCloud from \"../imgs/wordcloud_biden_logo.svg\";\nimport trumpCloud from \"../imgs/wordcloud_trump_logo.svg\";\n\nconst Graphs = () => {\n  return (\n    <Paper className=\"segment\">\n      <Typography align=\"center\" variant=\"h4\" gutterBottom>\n        Plots\n      </Typography>\n      <Grid container spacing={5}>\n        <Grid item xs={12} sm={6}>\n          <Typography align=\"center\" variant=\"h5\">\n            Biden\n          </Typography>\n          <img\n            src={bidenCloud}\n            alt=\"Word cloud from biden's tweets\"\n            style={{ width: \"100%\" }}\n          />\n          <img\n            src={bidenGraph}\n            alt=\"sentiment distribution of biden's tweets\"\n            style={{ width: \"100%\" }}\n          />\n          <img\n            src={trumpMentioned}\n            alt=\"sentiment distribution of biden's tweets where trump is mentioned\"\n            style={{ width: \"100%\" }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography align=\"center\" variant=\"h5\">\n            Trump\n          </Typography>\n          <img\n            src={trumpCloud}\n            alt=\"Word cloud from trump's tweets\"\n            style={{ width: \"100%\" }}\n          />\n          <img\n            src={trumpGraph}\n            alt=\"sentiment distribution of trump's tweets\"\n            style={{ width: \"100%\" }}\n          />\n          <img\n            src={bidenMentioned}\n            alt=\"sentiment distribution of trump's tweets where biden is mentioned\"\n            style={{ width: \"100%\" }}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Graphs;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PersonInfo from \"./PersonInfo\";\nimport TweetInfo from \"./TweetInfo\";\nimport Footer from \"./Footer\";\nimport Graphs from \"./Graphs\";\n\nconst Content = ({\n  person,\n  tweets,\n  togglePerson,\n  selectDate,\n  selectedTweets,\n}) => {\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <PersonInfo person={person} togglePerson={togglePerson} />\n      </Grid>\n      <Grid item xs={12}>\n        <TweetInfo\n          person={person}\n          tweets={tweets}\n          selectDate={selectDate}\n          selectedTweets={selectedTweets}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Graphs />\n      </Grid>\n      <Grid item xs={12}>\n        <Footer />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Content;\n","import axios from \"axios\";\n\nexport const getUserInfo = async () => {\n  const config = {\n    headers: {\n      Authorization: `bearer ${process.env.REACT_APP_TOKEN}`,\n    },\n  };\n\n  const response = await axios.get(\n    `https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/users/by?usernames=realdonaldtrump,joebiden&user.fields=description,profile_image_url`,\n    config\n  );\n  return response.data;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Container, CssBaseline, CircularProgress } from \"@material-ui/core\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport Content from \"./components/Content\";\nimport { getUserInfo } from \"./requests\";\nimport trumpData from \"./data/trump_tweets.json\";\nimport bidenData from \"./data/biden_tweets.json\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 655,\n      md: 960,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n});\n\nconst App = () => {\n  const [trumpInfo, setTrumpInfo] = useState(null);\n  const [bidenInfo, setBidenInfo] = useState(null);\n  const [person, setPerson] = useState(null);\n  const [trumpTweets, setTrumpTweets] = useState(null);\n  const [bidenTweets, setBidenTweets] = useState(null);\n  const [tweets, setTweets] = useState(null);\n  const [selectedTweets, setSelectedTweets] = useState(null);\n\n  const selectColor = (tweet, allTweets) => {\n    const sameDate = allTweets.filter((t) => t.date === tweet.date);\n\n    let neutScore = 0;\n    let negScore = 0;\n    let posScore = 0;\n    for (let i = 0; i < sameDate.length; i++) {\n      neutScore += sameDate[i].neut_score;\n      negScore += sameDate[i].neg_score;\n      posScore += sameDate[i].pos_score;\n    }\n\n    const maxScore = Math.max(neutScore, negScore, posScore);\n\n    if (maxScore === posScore) {\n      return \"0\";\n    } else if (maxScore === neutScore) {\n      return \"1\";\n    } else if (maxScore === negScore) {\n      return \"2\";\n    }\n  };\n\n  useEffect(() => {\n    const getPersonInfo = async () => {\n      const res = await getUserInfo();\n      setTrumpInfo(res.data[0]);\n      setBidenInfo(res.data[1]);\n      setPerson(res.data[0]);\n    };\n\n    const formatTweets = (data) => {\n      const formattedTweets = data.map((tweet) => {\n        return {\n          ...tweet,\n          color: selectColor(tweet, data),\n        };\n      });\n      return formattedTweets;\n    };\n\n    getPersonInfo();\n    setTrumpTweets(formatTweets(trumpData));\n    setBidenTweets(formatTweets(bidenData));\n    setTweets(formatTweets(trumpData));\n  }, []);\n\n  const togglePerson = () => {\n    if (person.username === \"realDonaldTrump\") {\n      setPerson(bidenInfo);\n      setTweets(bidenTweets);\n      if (selectedTweets) {\n        setSelectedTweets(\n          bidenTweets.filter((t) => t.date === selectedTweets[0].date)\n        );\n      }\n    } else if (person.username === \"JoeBiden\") {\n      setPerson(trumpInfo);\n      setTweets(trumpTweets);\n      if (selectedTweets) {\n        setSelectedTweets(\n          trumpTweets.filter((t) => t.date === selectedTweets[0].date)\n        );\n      }\n    }\n  };\n\n  const selectDate = (value) => {\n    if (!value) {\n      return;\n    }\n    if (value === \"back\") {\n      setSelectedTweets(null);\n      return;\n    }\n    const sameDateTweets = tweets.filter((t) => t.date === value.date);\n    setSelectedTweets(sameDateTweets);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Navigation />\n        {!person ? (\n          <div className=\"spinner\">\n            <CircularProgress />\n          </div>\n        ) : (\n          <Content\n            person={person}\n            tweets={tweets}\n            togglePerson={togglePerson}\n            selectDate={selectDate}\n            selectedTweets={selectedTweets}\n          />\n        )}\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/biden_sent_distr.846a3a04.svg\";","module.exports = __webpack_public_path__ + \"static/media/trump_sent_distr.730dcaa9.svg\";","module.exports = __webpack_public_path__ + \"static/media/biden_mentioned_sent_distr.d858703c.svg\";","module.exports = __webpack_public_path__ + \"static/media/trump_mentioned_sent_distr.5384cb3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/wordcloud_biden_logo.0e88f79a.svg\";","module.exports = __webpack_public_path__ + \"static/media/wordcloud_trump_logo.4c9fbf57.svg\";"],"sourceRoot":""}